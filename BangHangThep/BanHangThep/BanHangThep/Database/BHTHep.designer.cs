#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BanHangThep.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLHANGTHEP")]
	public partial class BHTHepDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    partial void InsertNHAP_HANG(NHAP_HANG instance);
    partial void UpdateNHAP_HANG(NHAP_HANG instance);
    partial void DeleteNHAP_HANG(NHAP_HANG instance);
    #endregion
		
		public BHTHepDataContext() : 
				base(global::BanHangThep.Properties.Settings.Default.QLHANGTHEPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BHTHepDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BHTHepDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BHTHepDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BHTHepDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
		
		public System.Data.Linq.Table<NHAP_HANG> NHAP_HANGs
		{
			get
			{
				return this.GetTable<NHAP_HANG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USERS")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USERNAME;
		
		private string _PASSWORD;
		
		private string _FULLNAME;
		
		private string _ROLEID;
		
		private System.Nullable<bool> _ENABLED;
		
		private string _CREATEBY;
		
		private System.Nullable<System.DateTime> _CREATEDATE;
		
		private string _MODIFYBY;
		
		private System.Nullable<System.DateTime> _MODIFYDATE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnFULLNAMEChanging(string value);
    partial void OnFULLNAMEChanged();
    partial void OnROLEIDChanging(string value);
    partial void OnROLEIDChanged();
    partial void OnENABLEDChanging(System.Nullable<bool> value);
    partial void OnENABLEDChanged();
    partial void OnCREATEBYChanging(string value);
    partial void OnCREATEBYChanged();
    partial void OnCREATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATEDATEChanged();
    partial void OnMODIFYBYChanging(string value);
    partial void OnMODIFYBYChanged();
    partial void OnMODIFYDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFYDATEChanged();
    #endregion
		
		public USER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(50)")]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FULLNAME", DbType="NVarChar(50)")]
		public string FULLNAME
		{
			get
			{
				return this._FULLNAME;
			}
			set
			{
				if ((this._FULLNAME != value))
				{
					this.OnFULLNAMEChanging(value);
					this.SendPropertyChanging();
					this._FULLNAME = value;
					this.SendPropertyChanged("FULLNAME");
					this.OnFULLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLEID", DbType="VarChar(5)")]
		public string ROLEID
		{
			get
			{
				return this._ROLEID;
			}
			set
			{
				if ((this._ROLEID != value))
				{
					this.OnROLEIDChanging(value);
					this.SendPropertyChanging();
					this._ROLEID = value;
					this.SendPropertyChanged("ROLEID");
					this.OnROLEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED", DbType="Bit")]
		public System.Nullable<bool> ENABLED
		{
			get
			{
				return this._ENABLED;
			}
			set
			{
				if ((this._ENABLED != value))
				{
					this.OnENABLEDChanging(value);
					this.SendPropertyChanging();
					this._ENABLED = value;
					this.SendPropertyChanged("ENABLED");
					this.OnENABLEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEBY", DbType="VarChar(50)")]
		public string CREATEBY
		{
			get
			{
				return this._CREATEBY;
			}
			set
			{
				if ((this._CREATEBY != value))
				{
					this.OnCREATEBYChanging(value);
					this.SendPropertyChanging();
					this._CREATEBY = value;
					this.SendPropertyChanged("CREATEBY");
					this.OnCREATEBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATEDATE
		{
			get
			{
				return this._CREATEDATE;
			}
			set
			{
				if ((this._CREATEDATE != value))
				{
					this.OnCREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._CREATEDATE = value;
					this.SendPropertyChanged("CREATEDATE");
					this.OnCREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFYBY", DbType="VarChar(50)")]
		public string MODIFYBY
		{
			get
			{
				return this._MODIFYBY;
			}
			set
			{
				if ((this._MODIFYBY != value))
				{
					this.OnMODIFYBYChanging(value);
					this.SendPropertyChanging();
					this._MODIFYBY = value;
					this.SendPropertyChanged("MODIFYBY");
					this.OnMODIFYBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFYDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFYDATE
		{
			get
			{
				return this._MODIFYDATE;
			}
			set
			{
				if ((this._MODIFYDATE != value))
				{
					this.OnMODIFYDATEChanging(value);
					this.SendPropertyChanging();
					this._MODIFYDATE = value;
					this.SendPropertyChanged("MODIFYDATE");
					this.OnMODIFYDATEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHAP_HANG")]
	public partial class NHAP_HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STT;
		
		private string _MAHANG;
		
		private string _TENHANG;
		
		private string _DVT;
		
		private System.Nullable<double> _SOLUONG;
		
		private System.Nullable<double> _GIANHAP;
		
		private System.Nullable<double> _GIABAN;
		
		private System.Nullable<System.DateTime> _NGAYCNGIA;
		
		private System.Nullable<double> _TRONGLUONG;
		
		private string _GHICHU;
		
		private string _CREATEBY;
		
		private System.Nullable<System.DateTime> _CREATEDATE;
		
		private string _MODIFYBY;
		
		private System.Nullable<System.DateTime> _MODIFYDATE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnMAHANGChanging(string value);
    partial void OnMAHANGChanged();
    partial void OnTENHANGChanging(string value);
    partial void OnTENHANGChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnSOLUONGChanging(System.Nullable<double> value);
    partial void OnSOLUONGChanged();
    partial void OnGIANHAPChanging(System.Nullable<double> value);
    partial void OnGIANHAPChanged();
    partial void OnGIABANChanging(System.Nullable<double> value);
    partial void OnGIABANChanged();
    partial void OnNGAYCNGIAChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYCNGIAChanged();
    partial void OnTRONGLUONGChanging(System.Nullable<double> value);
    partial void OnTRONGLUONGChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    partial void OnCREATEBYChanging(string value);
    partial void OnCREATEBYChanged();
    partial void OnCREATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATEDATEChanged();
    partial void OnMODIFYBYChanging(string value);
    partial void OnMODIFYBYChanged();
    partial void OnMODIFYDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFYDATEChanged();
    #endregion
		
		public NHAP_HANG()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANG", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHANG
		{
			get
			{
				return this._MAHANG;
			}
			set
			{
				if ((this._MAHANG != value))
				{
					this.OnMAHANGChanging(value);
					this.SendPropertyChanging();
					this._MAHANG = value;
					this.SendPropertyChanged("MAHANG");
					this.OnMAHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHANG", DbType="NVarChar(250)")]
		public string TENHANG
		{
			get
			{
				return this._TENHANG;
			}
			set
			{
				if ((this._TENHANG != value))
				{
					this.OnTENHANGChanging(value);
					this.SendPropertyChanging();
					this._TENHANG = value;
					this.SendPropertyChanged("TENHANG");
					this.OnTENHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(250)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Float")]
		public System.Nullable<double> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIANHAP", DbType="Float")]
		public System.Nullable<double> GIANHAP
		{
			get
			{
				return this._GIANHAP;
			}
			set
			{
				if ((this._GIANHAP != value))
				{
					this.OnGIANHAPChanging(value);
					this.SendPropertyChanging();
					this._GIANHAP = value;
					this.SendPropertyChanged("GIANHAP");
					this.OnGIANHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIABAN", DbType="Float")]
		public System.Nullable<double> GIABAN
		{
			get
			{
				return this._GIABAN;
			}
			set
			{
				if ((this._GIABAN != value))
				{
					this.OnGIABANChanging(value);
					this.SendPropertyChanging();
					this._GIABAN = value;
					this.SendPropertyChanged("GIABAN");
					this.OnGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYCNGIA", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYCNGIA
		{
			get
			{
				return this._NGAYCNGIA;
			}
			set
			{
				if ((this._NGAYCNGIA != value))
				{
					this.OnNGAYCNGIAChanging(value);
					this.SendPropertyChanging();
					this._NGAYCNGIA = value;
					this.SendPropertyChanged("NGAYCNGIA");
					this.OnNGAYCNGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRONGLUONG", DbType="Float")]
		public System.Nullable<double> TRONGLUONG
		{
			get
			{
				return this._TRONGLUONG;
			}
			set
			{
				if ((this._TRONGLUONG != value))
				{
					this.OnTRONGLUONGChanging(value);
					this.SendPropertyChanging();
					this._TRONGLUONG = value;
					this.SendPropertyChanged("TRONGLUONG");
					this.OnTRONGLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(MAX)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEBY", DbType="VarChar(50)")]
		public string CREATEBY
		{
			get
			{
				return this._CREATEBY;
			}
			set
			{
				if ((this._CREATEBY != value))
				{
					this.OnCREATEBYChanging(value);
					this.SendPropertyChanging();
					this._CREATEBY = value;
					this.SendPropertyChanged("CREATEBY");
					this.OnCREATEBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATEDATE
		{
			get
			{
				return this._CREATEDATE;
			}
			set
			{
				if ((this._CREATEDATE != value))
				{
					this.OnCREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._CREATEDATE = value;
					this.SendPropertyChanged("CREATEDATE");
					this.OnCREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFYBY", DbType="VarChar(50)")]
		public string MODIFYBY
		{
			get
			{
				return this._MODIFYBY;
			}
			set
			{
				if ((this._MODIFYBY != value))
				{
					this.OnMODIFYBYChanging(value);
					this.SendPropertyChanging();
					this._MODIFYBY = value;
					this.SendPropertyChanged("MODIFYBY");
					this.OnMODIFYBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFYDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFYDATE
		{
			get
			{
				return this._MODIFYDATE;
			}
			set
			{
				if ((this._MODIFYDATE != value))
				{
					this.OnMODIFYDATEChanging(value);
					this.SendPropertyChanging();
					this._MODIFYDATE = value;
					this.SendPropertyChanged("MODIFYDATE");
					this.OnMODIFYDATEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
